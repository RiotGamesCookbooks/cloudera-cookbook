#!/bin/bash
# 
# (c) Copyright 2009 Cloudera, Inc.
# 
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
# 
#       http://www.apache.org/licenses/LICENSE-2.0
# 
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# 
# Starts a Hadoop datanode
# 
# chkconfig: 35 90 10
# description: Hadoop datanode

source /etc/rc.d/init.d/functions
source /etc/default/hadoop-0.20

JAVA_HOME="<%= @java_home  %>"
export JAVA_HOME

source /usr/lib/hadoop-0.20/bin/hadoop-config.sh


RETVAL_SUCCESS=0

STATUS_RUNNING=0
STATUS_DEAD=1
STATUS_DEAD_AND_LOCK=2
STATUS_NOT_RUNNING=3

RETVAL=0
HADOOP_PID_DIR=${HADOOP_PID_DIR:-/var/run/hadoop-0.20}
PIDFILE="$HADOOP_PID_DIR/hadoop-$HADOOP_IDENT_STRING-datanode.pid"
LOCKFILE="/var/lock/subsys/hadoop-datanode"
desc="Hadoop datanode daemon"
SLEEP_TIME=5

start() {
  <%- if node['kernel']['release'].to_i >= 3 -%>
  #this will disable Transparent Hugepage Support
  #http://www.mjmwired.net/kernel/Documentation/vm/transhuge.txt
  echo 'never' > /sys/kernel/mm/redhat_transparent_hugepage/defrag
  <%- end -%>
  echo -n $"Starting $desc (hadoop-datanode): "
  daemon /usr/lib/hadoop-0.20/bin/hadoop-daemon.sh --config "/etc/hadoop-0.20/conf" start datanode $DAEMON_FLAGS
  RETVAL=$?

  if [ "datanode" = "datanode" ]; then
    # Some processes are slow to start
    sleep $SLEEP_TIME
    checkstatus
    RETVAL=$?
  fi

  [ $RETVAL -eq $RETVAL_SUCCESS ] && touch $LOCKFILE
  return $RETVAL
}

stop() {
  echo -n $"Stopping $desc (hadoop-datanode): "
  daemon /usr/lib/hadoop-0.20/bin/hadoop-daemon.sh --config "/etc/hadoop-0.20/conf" stop datanode
  RETVAL=$?

  [ $RETVAL -eq $RETVAL_SUCCESS ] && rm -f $LOCKFILE $PIDFILE

  if [ "datanode" = "datanode" ]; then
    # Some processes are slow to stop
    sleep $SLEEP_TIME
    checkstatus

    # Stopping a non running process should be a success
    if [ $RETVAL -eq $STATUS_NOT_RUNNING ]; then
        RETVAL=0
    fi
  fi
}

restart() {
  stop
  start
}

checkstatus(){
  status -p $PIDFILE datanode
  RETVAL=$?
}

condrestart(){
  [ -e $LOCKFILE ] && restart || :
}

check_for_root() {
  if [ $(id -ur) -ne 0 ]; then
    echo 'Error: root user required'
    echo
     exit 1
  fi
}

hadoopservice() {
  case "$1" in
    start)
      check_for_root
      start
      ;;
    stop)
      check_for_root
      stop
      ;;
    status)
      checkstatus
      ;;
    restart)
      check_for_root
      restart
      ;;
    condrestart|try-restart)
      check_for_root
      condrestart
      ;;
    *)
      if [ "datanode" = "namenode" ]; then
        if [ "$1" = "upgrade" -o "$1" = "rollback" ]; then
          DAEMON_FLAGS=-$1 $0 start
          RETVAL=$?
        else
          echo $"Usage: $0 {start|stop|status|restart|try-restart|condrestart|upgrade|rollback}"
          exit 1
        fi
      else
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart}"
        exit 1
      fi
  esac
}

hadoopservice "$1"

exit $RETVAL
